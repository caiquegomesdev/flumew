import React, { useState, useEffect } from 'react';
import { Droplets, TrendingUp, AlertTriangle, Settings, Home, BarChart3, Bell } from 'lucide-react';

const FlumeWaterApp = () => {
  const [currentUsage, setCurrentUsage] = useState(2.3);
  const [dailyUsage, setDailyUsage] = useState(127);
  const [monthlyUsage, setMonthlyUsage] = useState(3420);
  const [activeTab, setActiveTab] = useState('dashboard');
  const [alerts, setAlerts] = useState([
    { id: 1, type: 'warning', message: 'Uso elevado detectado no banheiro principal', time: '14:32' },
    { id: 2, type: 'info', message: 'Relatório mensal disponível', time: '09:15' }
  ]);

  // Simular mudanças no consumo de água
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentUsage(prev => Math.max(0, prev + (Math.random() - 0.5) * 0.5));
      setDailyUsage(prev => prev + Math.random() * 0.1);
    }, 2000);

    return () => clearInterval(interval);
  }, []);

  const weeklyData = [
    { day: 'Seg', usage: 145 },
    { day: 'Ter', usage: 132 },
    { day: 'Qua', usage: 128 },
    { day: 'Qui', usage: 156 },
    { day: 'Sex', usage: 134 },
    { day: 'Sáb', usage: 167 },
    { day: 'Dom', usage: 143 }
  ];

  const locations = [
    { name: 'Cozinha', usage: 34.2, percentage: 27 },
    { name: 'Banheiro Principal', usage: 45.6, percentage: 36 },
    { name: 'Banheiro Social', usage: 28.1, percentage: 22 },
    { name: 'Lavanderia', usage: 19.1, percentage: 15 }
  ];

  const Dashboard = () => (
    <div className="space-y-6">
      {/* Current Usage Card */}
      <div className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl p-6 text-white">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center space-x-2">
            <Droplets className="w-6 h-6" />
            <h2 className="text-lg font-semibold">Uso Atual</h2>
          </div>
          <div className="text-right">
            <div className="text-3xl font-bold">{currentUsage.toFixed(1)}</div>
            <div className="text-blue-100 text-sm">L/min</div>
          </div>
        </div>
        <div className="bg-white bg-opacity-20 rounded-lg p-3">
          <div className="text-sm mb-1">Consumo hoje</div>
          <div className="text-2xl font-bold">{dailyUsage.toFixed(0)} L</div>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-2 gap-4">
        <div className="bg-white rounded-xl p-4 shadow-sm border">
          <div className="text-gray-600 text-sm mb-1">Esta Semana</div>
          <div className="text-2xl font-bold text-gray-900">982 L</div>
          <div className="flex items-center text-green-600 text-sm mt-1">
            <TrendingUp className="w-4 h-4 mr-1" />
            -12% vs anterior
          </div>
        </div>
        <div className="bg-white rounded-xl p-4 shadow-sm border">
          <div className="text-gray-600 text-sm mb-1">Este Mês</div>
          <div className="text-2xl font-bold text-gray-900">{monthlyUsage.toFixed(0)} L</div>
          <div className="text-gray-500 text-sm mt-1">Meta: 4000 L</div>
        </div>
      </div>

      {/* Usage by Location */}
      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Uso por Ambiente</h3>
        <div className="space-y-3">
          {locations.map((location, index) => (
            <div key={index} className="flex items-center justify-between">
              <div>
                <div className="font-medium text-gray-900">{location.name}</div>
                <div className="text-sm text-gray-600">{location.usage} L hoje</div>
              </div>
              <div className="flex items-center space-x-3">
                <div className="w-20 bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-blue-500 h-2 rounded-full" 
                    style={{ width: `${location.percentage}%` }}
                  ></div>
                </div>
                <div className="text-sm font-medium text-gray-600 w-8">{location.percentage}%</div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Alerts */}
      {alerts.length > 0 && (
        <div className="bg-white rounded-xl p-6 shadow-sm border">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <Bell className="w-5 h-5 mr-2" />
            Alertas Recentes
          </h3>
          <div className="space-y-3">
            {alerts.map((alert) => (
              <div key={alert.id} className="flex items-start space-x-3 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                <AlertTriangle className="w-5 h-5 text-yellow-600 mt-0.5" />
                <div className="flex-1">
                  <div className="text-sm text-gray-900">{alert.message}</div>
                  <div className="text-xs text-gray-600 mt-1">{alert.time}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );

  const Analytics = () => (
    <div className="space-y-6">
      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Consumo Semanal</h3>
        <div className="space-y-4">
          {weeklyData.map((day, index) => (
            <div key={index} className="flex items-center space-x-4">
              <div className="w-8 text-sm font-medium text-gray-600">{day.day}</div>
              <div className="flex-1 bg-gray-200 rounded-full h-4">
                <div 
                  className="bg-blue-500 h-4 rounded-full flex items-center justify-end pr-2" 
                  style={{ width: `${(day.usage / 170) * 100}%` }}
                >
                  <span className="text-xs text-white font-medium">{day.usage}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Comparativo Mensal</h3>
        <div className="grid grid-cols-3 gap-4">
          <div className="text-center">
            <div className="text-2xl font-bold text-gray-900">3,420</div>
            <div className="text-sm text-gray-600">Este Mês</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-gray-900">3,890</div>
            <div className="text-sm text-gray-600">Mês Anterior</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-green-600">-12%</div>
            <div className="text-sm text-gray-600">Economia</div>
          </div>
        </div>
      </div>

      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Metas de Economia</h3>
        <div className="space-y-4">
          <div>
            <div className="flex justify-between text-sm mb-2">
              <span>Meta Mensal (4000 L)</span>
              <span>{((monthlyUsage / 4000) * 100).toFixed(0)}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div 
                className="bg-green-500 h-3 rounded-full" 
                style={{ width: `${Math.min((monthlyUsage / 4000) * 100, 100)}%` }}
              ></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const SettingsPage = () => (
    <div className="space-y-6">
      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Configurações de Alerta</h3>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <div>
              <div className="font-medium text-gray-900">Uso Elevado</div>
              <div className="text-sm text-gray-600">Alertar quando uso exceder limite</div>
            </div>
            <input type="checkbox" className="h-5 w-5 text-blue-600" defaultChecked />
          </div>
          <div className="flex items-center justify-between">
            <div>
              <div className="font-medium text-gray-900">Vazamentos</div>
              <div className="text-sm text-gray-600">Detectar possíveis vazamentos</div>
            </div>
            <input type="checkbox" className="h-5 w-5 text-blue-600" defaultChecked />
          </div>
          <div className="flex items-center justify-between">
            <div>
              <div className="font-medium text-gray-900">Relatórios Semanais</div>
              <div className="text-sm text-gray-600">Receber resumo por email</div>
            </div>
            <input type="checkbox" className="h-5 w-5 text-blue-600" />
          </div>
        </div>
      </div>

      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Preferências</h3>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Unidade de Medida
            </label>
            <select className="w-full p-3 border border-gray-300 rounded-lg">
              <option>Litros (L)</option>
              <option>Galões (gal)</option>
            </select>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Meta Mensal de Consumo
            </label>
            <input 
              type="number" 
              placeholder="4000" 
              className="w-full p-3 border border-gray-300 rounded-lg"
            />
          </div>
        </div>
      </div>

      <div className="bg-white rounded-xl p-6 shadow-sm border">
        <h3 className="text-lg font-semibold text-gray-900 mb-4">Dispositivos</h3>
        <div className="space-y-3">
          <div className="flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg">
            <div>
              <div className="font-medium text-gray-900">Sensor Principal</div>
              <div className="text-sm text-green-600">Conectado</div>
            </div>
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="max-w-md mx-auto bg-gray-50 min-h-screen">
      {/* Header */}
      <div className="bg-white shadow-sm border-b px-6 py-4">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-xl font-bold text-gray-900">Flume</h1>
            <p className="text-sm text-gray-600">Monitor de Água</p>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 bg-green-500 rounded-full"></div>
            <span className="text-sm text-gray-600">Online</span>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="px-6 py-6">
        {activeTab === 'dashboard' && <Dashboard />}
        {activeTab === 'analytics' && <Analytics />}
        {activeTab === 'settings' && <SettingsPage />}
      </div>

      {/* Bottom Navigation */}
      <div className="fixed bottom-0 left-1/2 transform -translate-x-1/2 w-full max-w-md bg-white border-t border-gray-200">
        <div className="flex">
          <button 
            onClick={() => setActiveTab('dashboard')}
            className={`flex-1 py-3 px-4 text-center ${activeTab === 'dashboard' ? 'text-blue-600' : 'text-gray-600'}`}
          >
            <Home className="w-6 h-6 mx-auto mb-1" />
            <span className="text-xs">Início</span>
          </button>
          <button 
            onClick={() => setActiveTab('analytics')}
            className={`flex-1 py-3 px-4 text-center ${activeTab === 'analytics' ? 'text-blue-600' : 'text-gray-600'}`}
          >
            <BarChart3 className="w-6 h-6 mx-auto mb-1" />
            <span className="text-xs">Análises</span>
          </button>
          <button 
            onClick={() => setActiveTab('settings')}
            className={`flex-1 py-3 px-4 text-center ${activeTab === 'settings' ? 'text-blue-600' : 'text-gray-600'}`}
          >
            <Settings className="w-6 h-6 mx-auto mb-1" />
            <span className="text-xs">Configurações</span>
          </button>
        </div>
      </div>

      {/* Spacing for bottom nav */}
      <div className="h-20"></div>
    </div>
  );
};

export default FlumeWaterApp;